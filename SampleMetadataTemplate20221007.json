{
            "$schema": "../../iSamplesSchemaBasic0.2.json",
            "@id": self.id_string(),
            "label": self.sample_label(),
            "sampleidentifier": self.sample_identifier_string(),
            "description": self.sample_description(),
            "hasContextCategory": self.has_context_categories(),
            "hasMaterialCategory": self.has_material_categories(),
            "hasSpecimenCategory": self.has_specimen_categories(),
            "informalClassification": self.informal_classification(),
            "keywords": self.keywords(),
            "producedBy": {
                "@id": self.produced_by_id_string(),
                "label": self.produced_by_label(),
                "description": self.produced_by_description(),
                "hasFeatureOfInterest": self.produced_by_feature_of_interest(),
                "responsibility": self.produced_by_responsibilities(),
                "resultTime": self.produced_by_result_time(),
                "samplingSite": {
                    "description": self.sampling_site_description(),
                    "label": self.sampling_site_label(),
                    "location": {
                        "elevation": self.sampling_site_elevation(),
                        "latitude": self.sampling_site_latitude(),
                        "longitude": self.sampling_site_longitude(),
                    },
                    "placeName": self.sampling_site_place_names(),
                },
            },
            "registrant": self.sample_registrant(),
            "samplingPurpose": self.sample_sampling_purpose(),
            "curation": {
                "label": self.curation_label(),
                "description": self.curation_description(),
                "accessConstraints": self.curation_access_constraints(),
                "curationLocation": self.curation_location(),
                "responsibility": self.curation_responsibility(),
            },
            "relatedResource": self.related_resources(),
            "authorizedBy": self.authorized_by(),
            "compliesWith": self.complies_with(),
        }